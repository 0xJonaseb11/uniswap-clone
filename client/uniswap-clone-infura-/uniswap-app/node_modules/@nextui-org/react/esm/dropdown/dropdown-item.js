import e,{useRef as o,useMemo as s}from"react";import{mergeProps as i}from"@react-aria/utils";import{useFocusRing as r}from"@react-aria/focus";import{useHover as t,usePress as a}from"@react-aria/interactions";import{useMenuItem as d}from"@react-aria/menu";import c from"../utils/checkmark";import{useDropdownContext as n}from"./dropdown-context";import{StyledDropdownItem as p,StyledDropdownItemKbd as l,StyledDropdownItemContent as m,StyledDropdownItemIconWrapper as u,StyledDropdownItemContentWrapper as h,StyledDropdownItemDescription as f}from"./dropdown.styles";import x from"../utils/clsx";import{__DEV__ as b}from"../utils/assertion";import{jsx as w}from"react/jsx-runtime";import{jsxs as v}from"react/jsx-runtime";const N=({as:e,css:b,item:N,state:y,color:D,icon:P,command:S,description:g,textColor:C,variant:k,autoFocus:F,isVirtualized:j,withDivider:A,dividerWeight:I,onAction:M,className:V})=>{const{onClose:W,closeOnSelect:O,disableAnimation:z,borderWeight:H}=n(),{rendered:K,key:U}=N,$=y.selectionManager.isSelected(U),q=y.selectionManager.focusedKey===N.key,B=y.disabledKeys.has(U),E=o(null),{pressProps:G,isPressed:J}=a({ref:E,isDisabled:B}),{isFocusVisible:L,focusProps:Q}=r({autoFocus:F}),{hoverProps:R,isHovered:T}=t({isDisabled:B}),X="none"!==y.selectionManager.selectionMode&&!B,{menuItemProps:Y,labelProps:Z,descriptionProps:_,keyboardShortcutProps:ee}=d({key:U,onClose:W,isSelected:$,isDisabled:B,"aria-label":N["aria-label"],closeOnSelect:O,isVirtualized:j,onAction:M},y,E),oe=s((()=>T?"hovered":$?"selected":J?"pressed":B?"disabled":"ready"),[$,B,T,J]),se=s((()=>N.props.textColor?N.props.textColor:N.props.color&&"default"===C?N.props.color:C),[C,N.props.color,N.props.textColor]),ie=s((()=>g||N.props.description),[g,N.props.description]),re=s((()=>S||N.props.command),[S,N.props.command]),te=s((()=>P||N.props.icon),[P,N.props.icon]);return v(p,{ref:E,...i(Y,R,G,Q),as:N.props.as||e,css:{...i(b,N.props.css)},"data-state":oe,color:N.props.color||D,variant:N.props.variant||k,textColor:se,isFocused:q,isFocusVisible:L,shouldShowOutline:L&&"shadow"===k,isHovered:T,isSelected:$,isDisabled:B,isPressed:J,isSelectable:X,withDivider:A||N.props.withDivider,withDescription:!!ie,dividerWeight:I||N.props.dividerWeight||H,disableAnimation:z,className:x("nextui-dropdown-item",{"is-disabled":B,"is-selected":$,"is-selectable":X,"is-hovered":T,"is-focused":q,"is-pressed":J},V,N.props.className),children:[te&&w(u,{className:"nextui-dropdown-item-icon-wrapper",children:te}),ie?v(h,{children:[w(m,{className:"nextui-dropdown-item-content",...Z,children:K}),w(f,{className:"nextui-dropdown-item-description",hasIcon:!!te,hasCommand:!!re,..._,children:ie})]}):w(m,{className:"nextui-dropdown-item-content",...Z,children:K}),re&&w(l,{className:"nextui-dropdown-item-command",...ee,children:re}),$&&w(c,{css:{ml:"$4"}})]})};b&&(N.displayName="NextUI.DropdownItem"),N.toString=()=>".nextui-dropdown-item";export default N;