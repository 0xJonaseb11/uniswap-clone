import e,{useRef as t,useImperativeHandle as r,useLayoutEffect as s}from"react";import o from"../utils/with-defaults";import i from"../input";import n from"../use-resize";import a from"../use-warning";import{excludedInputPropsForTextarea as m}from"../utils/prop-types";import{__DEV__ as u}from"../utils/assertion";import{calculateNodeHeight as c,getSizingData as l}from"./utils";import{jsx as p}from"react/jsx-runtime";const f=e.forwardRef(((o,f)=>{const x=t(null),h=e.useRef(0),g=e.useRef(),{cacheMeasurements:d,rows:w,maxRows:y,minRows:R,onChange:H,onHeightChange:j,css:v,...C}=o;Object.keys(C).forEach((e=>{m.indexOf(e)>-1&&delete C[e]}));const P=void 0!==C.value;u&&C.style&&("maxHeight"in C.style&&a("Using `style.maxHeight` for <Textarea/> is not supported. Please use `maxRows`."),"minHeight"in C.style&&a("Using `style.minHeight` for <Textarea/> is not supported. Please use `minRows`.")),r(f,(()=>x.current));const T=()=>{const e=x.current,t=d&&g.current?g.current:l(e);if(!t)return;g.current=t;const[r,s]=c(t,e.value||e.placeholder||"x",w||R,w||y);h.current!==r&&(h.current=r,e.style.setProperty("height",`${r}px`,"important"),j&&j(r,{rowHeight:s}))};return"undefined"!=typeof document&&(s(T),n(T)),p(i,{as:"textarea",ref:x,onChange:e=>{P||T(),H&&H(e)},css:{...v},...C})}));u&&(f.displayName="NextUI.Textarea"),f.toString=()=>".nextui-textarea";export default o(f,{minRows:3,maxRows:6,cacheMeasurements:!0,initialValue:""});