import React from 'react';
import type { AriaRadioProps } from '@react-types/radio';
import type { NormalSizes, SimpleColors } from '../utils/prop-types';
interface Props extends AriaRadioProps {
    isSquared?: boolean;
    disableAnimation?: boolean;
    size?: NormalSizes;
    color?: SimpleColors;
    labelColor?: SimpleColors;
}
declare type NativeAttrs = Omit<React.InputHTMLAttributes<unknown>, keyof Props>;
export declare type UseRadioProps = Props & NativeAttrs;
/**
 * @internal
 */
export declare const useRadio: (props: UseRadioProps) => {
    size: "xs" | "sm" | "md" | "lg" | "xl";
    color: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    inputRef: React.RefObject<HTMLInputElement>;
    autoFocus: boolean | undefined;
    isDisabled: boolean;
    labelColor: "default" | "primary" | "secondary" | "success" | "warning" | "error";
    isInvalid: boolean;
    isHovered: boolean;
    isSquared: boolean;
    disableAnimation: boolean;
    inputProps: React.InputHTMLAttributes<HTMLElement>;
    hoverProps: React.HTMLAttributes<HTMLElement>;
};
export declare type UseRadioReturn = ReturnType<typeof useRadio>;
export {};
