var e=require("@babel/runtime/helpers/interopRequireDefault");exports.__esModule=!0,exports.useRadio=void 0;var i=require("react"),o=require("@react-aria/radio"),r=require("@react-aria/interactions"),a=e(require("../use-warning")),u=require("../utils/assertion"),s=require("./radio-context");exports.useRadio=e=>{var l,t,d;const n=(0,s.useRadioGroupContext)(),{size:p=(null!=(l=n.size)?l:"md"),color:v=(null!=(t=n.color)?t:"default"),labelColor:c=(null!=(d=n.labelColor)?d:"default"),autoFocus:b,isSquared:R=!1,disableAnimation:f=!1,...q}=e;n&&u.__DEV__&&(void 0!==q.checked&&(0,a.default)('Remove props "checked" if in the Radio.Group.',"Radio"),void 0===q.value&&(0,a.default)('Props "value" must be defined if in the Radio.Group.',"Radio"));const m=(0,i.useRef)(null),{inputProps:h}=(0,o.useRadio)(q,n.radioGroupState,m),_=(0,i.useMemo)((()=>{var e;return null!=(e=h.disabled)&&e}),[h.disabled]),{hoverProps:x,isHovered:P}=(0,r.useHover)({isDisabled:_});return{size:p,color:v,inputRef:m,autoFocus:b,isDisabled:_,labelColor:c,isInvalid:(0,i.useMemo)((()=>"invalid"===n.validationState),[n.validationState]),isHovered:P,isSquared:R,disableAnimation:f,inputProps:h,hoverProps:x}};